<?php

/**
 * @file
 * Tests for block.module.
 */

class BlockTranslationTestCase extends BackdropWebTestCase {
  protected $admin_user;

  function setUp() {
    $modules = array (
      'block_test',
      'language',
      'locale',
    );
    parent::setUp($modules);

    // Create and log in an administrative user having access to the Full HTML
    // text format.
    $full_html_format = filter_format_load('full_html');
    $this->admin_user = $this->backdropCreateUser(array(
      'administer blocks',
      filter_permission_name($full_html_format),
      'access administration pages',
      'administer layouts',
      'administer languages',
      'translate blocks',
    ));
    $this->backdropLogin($this->admin_user);
  }

  /**
   * Test creating custom block, translate it, and then deleting it.
   */
  function testTranslateCustomBlock() {

    // Check if language module was enabled.
    $this->assertTrue(module_exists('language'), 'Language module was enabled successfully.');

    // Installing new languages.
    $this->addLanguage('it');
    $this->addLanguage('es');
    $this->addLanguage('de');
    $this->addLanguage('fr');

    backdrop_static_reset('language_list');

    // Confirm that the add block link appears on block overview pages.
    $this->backdropGet('admin/structure/block');
    $this->assertRaw(l('Add custom block', 'admin/structure/block/add'), 'Add block link is present on block overview page for default theme.');

    // Load the form and check that file uploads are enabled on the body field.
    $this->backdropGet('admin/structure/block/add');

    // Add a new custom block by filling out the input form on the admin/structure/block/add page.
    $custom_block = array();
    $custom_block['info'] = $this->randomName(8);
    $custom_block['delta'] = strtolower($this->randomName(8));
    $custom_block['title'] = 'Testblock created in default language';
    $custom_block['body[value]'] = $this->randomName(32);
    $custom_block['default_langcode'] = language_default()->langcode;
    $this->backdropPost(NULL, $custom_block, 'Save block');

    // Confirm that the custom block has been created, and then find its config file
    $this->assertText(t('The block has been created.'), 'Custom block successfully created.');

    // Check to see if the custom block was created by checking that it has a configuration file.
    $custom_block = config_get('block.custom.'.$custom_block['delta']);
    $this->assertNotNull($custom_block['delta'], 'Custom block found in configuration.');

    // Verify presence of configure, delete and translate links for custom block.
    $this->backdropGet('admin/structure/block');
    $this->assertLinkByHref('admin/structure/block/manage/' . $custom_block['delta'] . '/configure', 0, 'Custom block configure link found.');
    $this->assertLinkByHref('admin/structure/block/manage/' . $custom_block['delta'] . '/delete', 0, 'Custom block delete link found.');
    $this->assertLinkByHref('admin/structure/block/manage/' . $custom_block['delta'] . '/translation', 0, 'Custom block translate link found.');

    // Test translation form.
    $this->backdropGet('admin/structure/block/manage/' . $custom_block['delta'] . '/translation');
    $this->assertLinkByHref('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/it', 0, 'Custom block translate link for italian found.');
    $this->assertLinkByHref('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/es', 0, 'Custom block translate link for spanish found.');
    $this->assertLinkByHref('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/de', 0, 'Custom block translate link for german found.');
    $this->assertLinkByHref('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/fr', 0, 'Custom block translate link for french found.');

    // Translate the blocks.
    $this->backdropGet('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/it');
    // Translate custom block by filling out the input.
    $translated_block = array();
    $translated_block['info'] = $this->randomName(8);
    $translated_block['title'] = 'Testblock translated to italian';
    $translated_block['body[value]'] = $this->randomName(32);
    $this->backdropPost(NULL, $translated_block, 'Save block');

    $this->backdropGet('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/es');
    // Translate custom block by filling out the input.
    $translated_block = array();
    $translated_block['info'] = $this->randomName(8);
    $translated_block['title'] = 'Testblock translated to spanish';
    $translated_block['body[value]'] = $this->randomName(32);
    $this->backdropPost(NULL, $translated_block, 'Save block');

    $this->backdropGet('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/de');
    // Translate custom block by filling out the input.
    $translated_block = array();
    $translated_block['info'] = $this->randomName(8);
    $translated_block['title'] = 'Testblock translated to german';
    $translated_block['body[value]'] = $this->randomName(32);
    $this->backdropPost(NULL, $translated_block, 'Save block');

    $this->backdropGet('admin/structure/block/manage/' . $custom_block['delta'] . '/translate/fr');
    // Translate custom block by filling out the input.
    $translated_block = array();
    $translated_block['info'] = $this->randomName(8);
    $translated_block['title'] = 'Testblock translated to french';
    $translated_block['body[value]'] = $this->randomName(32);
    $this->backdropPost(NULL, $translated_block, 'Save block');

      // Set the created custom block to a specific region.
    $layout = layout_load('default');
    $layout->addBlock('block', $custom_block['delta'], 'sidebar');
    $layout->save();

    // Get the default langcode.
    $default_langcode = language_default()->langcode;

    // Confirm that the custom block is being displayed in the default language.
    $this->backdropGet('user');
    $this->assertText('Testblock created in default language', 'Custom block successfully being displayed.');

    $languages = language_list();

    // Switch language to italy.
    global $language;
    $language = $languages['fr'];

    // Get the system config.
    $core_config = config('system.core');
    $core_config->set('language_default', 'fr');
    $core_config->save();

    $this->resetAll();

    // Confirm that the custom block is being displayed in italy.
    $this->backdropGet('user');
    $this->assertText('Testblock translated to french', 'Translated block successfully being displayed in french.');
  }

  private function addLanguage($language_code) {
    if (strpos($this->backdropGetContent(), 'enabled[' . $language_code . ']') === FALSE) {
      // Doesn't have language installed so add it.
      $edit = array(
        'predefined_langcode' => $language_code,
      );
      $this->backdropPost('admin/config/regional/language/add', $edit, t('Add language'));
    }
  }
}
